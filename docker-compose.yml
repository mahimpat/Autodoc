services:
  db:
    image: pgvector/pgvector:pg16
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-autodoc} -d ${POSTGRES_DB:-autodoc}"]
      interval: 5s
      timeout: 3s
      retries: 10
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-autodoc}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-autodoc}
      POSTGRES_DB: ${POSTGRES_DB:-autodoc}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro

  redis:
    image: redis:7

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  createbuckets:
    image: minio/mc:latest
    depends_on: [ minio ]
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 minioadmin minioadmin &&
      mc mb -p local/autodoc || true &&
      mc policy set public local/autodoc
      "

  ollama:
    image: ollama/ollama:latest
    volumes:
      - ollama_data:/root/.ollama

  api:
    restart: unless-stopped
    build:
      context: .
      dockerfile: backend/Dockerfile
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
      ollama:
        condition: service_started
    volumes:
      - ./templates:/app/templates
      - ./_local_store:/app/_local_store
      - ./uploads:/app/uploads
    ports:
      - "${API_PORT:-8000}:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    env_file: .env
    depends_on: [ redis, db, minio, ollama ]
    volumes:
      - ./templates:/app/templates
      - ./_local_store:/app/_local_store

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      - NEXT_PUBLIC_API_BASE=${NEXT_PUBLIC_API_BASE:-http://localhost:8000}
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
    depends_on: [ api ]
    ports:
      - "3000:3000"

volumes:
  db_data:
  minio_data:
  ollama_data: